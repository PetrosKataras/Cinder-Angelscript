
//! Render a button and update the boolean if needed
void uiButton( Vec2f pos, Vec2f size, string text, function callback ){
    
    Vec2f diff      = mMouse.getPos() - pos;
    Vec2f halfSize  = size;
    halfSize        *= 0.5f;
    halfSize.y      -= 3;
    Vec2f norm      = ( diff + size );
    norm            /= size;
    bool inside     = norm.x >= 0.0f && norm.x <= 1.0f
    && norm.y >= 0.0f && norm.y <= 1.0f;
    
    if( inside ){
		if( mMouse.isLeftDown() ){
            if( !mPrevMouse.isLeftDown() ){
                callback.opCall();
            }
            gl::color( ColorA::gray( 0.85 ) );
		}
		else {
			gl::color( ColorA::gray( 0.5 ) );
		}
	}
	else gl::color( ColorA::gray( 0.65f ) );
    
	gl::drawSolidRoundedRect( Rectf( pos, pos + size ), 2.5 );
    gl::drawStringCentered( text, pos + halfSize, ColorA::gray( 0.2 ) );
}


//! Render a Slider and update the input float if needed
void uiSlider( Vec2f pos, Vec2f size, string text, float value, float &out valueOut ){
    
    Vec2f diff      = mMouse.getPos() - pos;
    Vec2f halfSize  = size;
    halfSize        *= 0.5f;
    halfSize.y      -= 3;
    Vec2f norm      = ( diff + size );
    norm            /= size;
    
    bool inside     = norm.x >= 0.0f && norm.x <= 1.0f
    && norm.y >= 0.0f && norm.y <= 1.0f;
    
    valueOut = value;
    
    if( inside && mMouse.isLeftDown() ){
        valueOut = 1.0 - norm.x;
	}
    
    Vec2f valueSize = size;
    valueSize.x     *= valueOut;
    valueSize.x     = valueSize.x < 4.0f ? 4.0f : valueSize.x;
    
    gl::color( ColorA::gray( 0.65f ) );
	gl::drawSolidRoundedRect( Rectf( pos, pos + size ), 2.5 );
    gl::color( ColorA::gray( 0.5f ) );
	gl::drawSolidRoundedRect( Rectf( pos, pos + valueSize ), 2.5 );
    gl::drawStringCentered( text, pos + halfSize, ColorA::gray( 0.2 ) );
}