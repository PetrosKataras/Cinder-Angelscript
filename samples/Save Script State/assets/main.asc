Perlin  mPerlin;

// if state is saved between two builds the last values
// are used to initialize those variable instead of this
float   mTime           = 0.0f;
Vec2f   mStartPosition  = Vec2f( 320, 240 );

void draw(){
    
    gl::color( ColorA( 1.0f, 1.0f, 1.0f, 0.7f ) );
    
    // make it start gently
    float start = min( 1.0f, mTime );
    
    Rand rnd;
    
    // use perlin noise to animate a few circles
    for( int i = 0; i < 350; i++ ){
        float rand      = rnd.nextFloat() * 10.0f + i * 0.01f;
        Vec2f noise     = mPerlin.dfBm( mTime + rand, mTime - rand );
        noise           *= 250.0f * start;
        Vec2f position  = mStartPosition + noise;
        float size      = mPerlin.fBm( position.x * 0.01f, position.y * 0.01f ) * 100.0f * start;
        gl::drawSolidCircle( position, size, 25 );
    }
    
    mTime += 0.00121f;
}

// change the center on mousedrag
void mouseDragged( MouseEvent event ){
    mStartPosition = event.getPos();
}